customer.signup=insert into customer values(?, ?, ?, ?, 2, sysdate, sysdate, 0)
customer.findById=select * from customer where id = ?
customer.findAll=select * from customer where not grade_id = 1 order by signup_date
customer.findByGrade=select * from customer where grade_id = ? and not grade_id = 1 order by total_balance
customer.findByGradeId=select * from grade where grade_id = ? and not grade_id = 1
customer.findByKeywordId=select * from customer where id like ? and not grade_id = 1
customer.findByKeywordName=select * from customer where name like ? and not grade_id = 1
customer.findByKeywordTel=select * from customer where tel like ? and not grade_id = 1
customer.findByKeywordAccount=select * from customer where id = (select id from account where account_id = ?)
customer.withdraw=update customer set total_balance = total_balance - ?, update_date = sysdate where id = ?
customer.deposit=update customer set total_balance = total_balance + ?, update_date = sysdate where id = ?
customer.updateCustomerGrade=update customer set grade_id = (select grade_id from grade where ? between GRADE_MINIMUM and GRADE_MAXIMUM) where id = ?

account.save=INSERT INTO ACCOUNT VALUES(ACCOUNT_ID_SEQ.NEXTVAL, ?, 1, 0, sysdate, sysdate)
account.findAll=select * from account order by open_date
account.findByAccountid=select * from account where account_id = ? order by open_date
account.findByIdTrue=select * from account where id = ? and state_id = 1 order by account_id
account.findByIdFalse=select * from account where id = ? order by account_id
account.withdraw=update account set balance = balance - ?, update_date = sysdate where account_id = ?
account.deposit=update account set balance = balance + ?, update_date = sysdate where account_id = ?
account.updateClose=update account set state_id = 2 where account_id = ?
account.findByStateId=select * from account_state where state_id = ?

transaction.save=insert into transaction values(transaction_id_seq.nextval, ?, ?, ?, ?, ?, sysdate)
transaction.saveDeposit=insert into transaction(transaction_id, id, deposit_account_id, transaction_class_id, transaction_amount, transaction_Date) values(transaction_id_seq.nextval, ?, ?, ?, ?, sysdate)
transaction.saveWithdraw=insert into transaction(transaction_id, id, withdraw_account_id, transaction_class_id, transaction_amount, transaction_Date) values(transaction_id_seq.nextval, ?, ?, ?, ?, sysdate)
transaction.findAll=select * from transaction order by transaction_date desc
transaction.findById=select t.transaction_id, c.name, t.withdraw_account_id, t.deposit_account_id, t.transaction_class_id, t.transaction_amount, t.transaction_Date from transaction t inner join account a on t.withdraw_account_id = a.account_id inner join customer c on c.id = a.id where a.id = ? union select t.transaction_id, c.name, t.withdraw_account_id, t.deposit_account_id, t.transaction_class_id, t.transaction_amount, t.transaction_Date from transaction t inner join account a on t.deposit_account_id = a.account_id inner join customer c on c.id = a.id where a.id = ? order by transaction_date
transaction.findByTransactionId=select * from transaction where transaction_id = ?
transaction.findByToday=select * from transaction where to_char(transaction_date, 'yyyymmdd') = to_char(sysdate, 'yyyymmdd') order by transaction_date
transaction.findByAccountId=select * from transaction where withdraw_account_id = ? or deposit_account_id = ? order by transaction_date

statistics.findTotalCustomer=select count(*) from customer
statistics.findTodayCustomer=select count(*) from customer where to_char(signup_date, 'yyyymmdd') = to_char(sysdate, 'yyyymmdd')
statistics.findTotalBalance=select sum(total_balance) from customer
statistics.findTotalTransactionCount=select count(*) from transaction
statistics.findTotalTransactionAmount=select sum(transaction_amount) from transaction
statistics.findTotalTransactionTodayCount=select count(*) from transaction where to_char(transaction_date, 'yyyymmdd') = to_char(sysdate, 'yyyymmdd')
statistics.findTotalTransactionTodayAmount=select sum(transaction_amount) from transaction where to_char(transaction_date, 'yyyymmdd') = to_char(sysdate, 'yyyymmdd')
statistics.findTransactionCount=select id, name, grade_id, signup_date, count from (select c.id, c.name, c.grade_id, c.signup_date, count(t.transaction_amount) count from customer c inner join transaction t on c.id = t.id group by c.id, c.name, c.tel, c.grade_id, c.signup_date) where rownum <= 5 order by count desc
statistics.findTransactionAmount=select id, name, grade_id, signup_date, sum from (select c.id, c.name, c.grade_id, c.signup_date, sum(t.transaction_amount) sum from customer c inner join transaction t on c.id = t.id group by c.id, c.name, c.tel, c.grade_id, c.signup_date) where rownum <= 5 order by sum desc